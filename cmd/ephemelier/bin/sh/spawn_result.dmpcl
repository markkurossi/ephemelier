// -*- go -*-
//
// Copyright (c) 2025 Markku Rossi
//
// All rights reserved.
//

package main

import (
	"bytes"
	"ephemelier/kernel"
	"strconv"
	"unicode"
)

func main(g kernel.Garbler, e kernel.Evaluator) (
	[]byte, kernel.PC, kernel.Syscall, int32, []byte, int32) {

	var msg [200]byte

	if g.arg0 < 0 {
		size := copy(msg, []byte("spawn failed: "))

		error := strconv.Uitoa(uint16(-g.arg0))
		size = copy(msg[size:], []byte(error))

		return nil, intern(StWriteResult), kernel.SysWrite, 1, msg, size
	}

	size := copy(msg, []byte("waitpid not implemented yet: "))
	pid := strconv.Uitoa(uint32(g.arg0))
	size += copy(msg[size:], []byte(pid))
	msg[size] = '\r'
	msg[size+1] = '\n'
	size += 2

	return nil, intern(StWriteResult), kernel.SysWrite, 1, msg, size
}
