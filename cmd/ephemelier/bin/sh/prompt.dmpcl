// -*- go -*-
//
// Copyright (c) 2025 Markku Rossi
//
// All rights reserved.
//

package main

import (
	"encoding/binary"
	"ephemelier/kernel"
)

func main(g kernel.G, e kernel.E) (
	[]byte, kernel.PC, kernel.Syscall, int32, []byte, int32) {

	if g.arg0 < 0 {
		return nil, 0, kernel.SysExit, 1, nil, 0
	}
	nonce, mem, ok := kernel.DecodeMem(g.mem, g.key, e.key)
	if !ok {
		return nil, 0, kernel.SysExit, -kernel.EINVAL, nil, 0
	}

	count := binary.GetUint(mem)
	count++
	mem = binary.PutUint(mem, 0, count)

	prompt := []byte("esh $ ")

	return kernel.EncodeMem(nonce, mem, g.key, e.key), intern(StPromptResult),
		kernel.SysWrite, 1, prompt, len(prompt)
}
