// -*- go -*-
//
// Copyright (c) 2025 Markku Rossi
//
// All rights reserved.
//

package main

import (
	"encoding/binary"
	"ephemelier/kernel"
)

func main(g kernel.G1B, e kernel.E1B) (
	[]byte, kernel.PC, kernel.Syscall, int32, []byte, int32) {

	nonce, mem, ok := kernel.DecodeMem(g.mem, g.key, e.key)
	if !ok {
		return nil, 0, kernel.SysExit, -kernel.EINVAL, nil, 0
	}
	clientfd := binary.GetUint32(mem[4:])

	if g.arg0 < 0 || g.arg0 == 42 {
		return nil, intern(StAccept), kernel.SysClose, int32(clientfd), nil, 0
	}

	// XXX TLS handshake done.

	return nil, 0, kernel.SysExit, 0, nil, 0
}
