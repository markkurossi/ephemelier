//
// Copyright (c) 2025 Markku Rossi
//
// All rights reserved.
//

package tls

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"testing"
)

var handshake = "010005d00303af0b2cebdc39e9dcc45dde91c06b9e8658bfd45450632740e387a320338efb7420d458de4b0ff5a907f395e99e0a7bf76afebf781648ddf8bf7b6b2b60f4d92224001ac02bc02fc02cc030cca9cca8c009c013c00ac0141301130213030100056d0000000e000c0000096c6f63616c686f7374000b00020100ff010001000017000000120000000500050100000000000a000c000a11ec001d001700180019000d0016001408040403080708050806040105010601050306030032001a0018080404030807080508060401050106010503060302010203002b00050403040303003304ea04e811ec04c007ac8248aa56be434ff852c1070c5f22669402c61543a9c78186bfaa13836866349084cbbb258d5110827259827df6be41c915fbc893515c1a16924bbb861dec54b9c2ba8ac365348abb95288333e2d27284b412d44a351c645129e5711a628a32c2c0f3cca9941250fec490c8fa41f467006bab705307b92a5381060a1f08e51cdec0622eb0ca7df221990ba380d6c9888386bc57becbeb098b379ef389a50187cda7620d653bcae571343dba334b32709c9b6abdf1bad972c002d328c24c1b730c3eaadb2b037326ec1b608d584601c78f6137b4f2d8842d943f04f443302262c1b96436e20f1a4678fec5bec92b1aa0c7632b9a7b9742b811011220d36342f8bfa2bb4108410dfa229865527e506285087175cf02c043378a57145665222be7a9bfdcccbed01666b7eab101a7930839ca20f70e9d1845b3087d1ee170c8d9a0b791682f3935061635d170ab20f3ac57c74fdc23635ab82f8fa986fda9476fe0084edc5fab6c4874185941d58bf4293dd18490f9f13761b9b200497a02a2c6648b01c63416df2a190cd23d640992485a19aa4587de38b464e793b70a0a18cbbf571184626ba9d2c6959f707d1b48c00a12890a7860584440adc2a87145af71a9cbd5aab57ab49acd31ccea9a0b5aa1809de2c5df9ab369485fc5a7bebee3264bd272289a49f6740f6d22003e5a67dbb9005b4986ef1629f00158f26a5b0ed931832ca862d38c1f5484b6c513d14baa2b3ac790a2290764cd9c894d5f4ac0b9933d75fcc774a6b82a426643060b1fb298e3e5b89a018e3893823524b936e9c6000932e42b554b13264c1b5304180f1bf5a438f84766c73e213140501935997517c8a51762399ea2a18d5faa17b96328aa26c03fc6a52de72e88744602318d381cac8aa4a7bf8054d00a9d505873230256da434148d4a006476f75bc970972beaba730fbbb630506029ca503c71cc26d594ac63c3562525092b72d8f157c030bba43eba879d551e9e4b8702bc87f5340edca959f239b7122a6e1dbb859354b164c1a0d1ccbbea07888340ae430388f35463fe52c7b9c7111fa7e56787c24664675e6acae46afc6f683b7b720c7997cba2b317895586be5327f16cf863017cebba51395289edc217992203d81100b61552a0971a43cc40ed758b9a048d4a384ca4265238a8297a8a9c64c1c6b03aa85135590ecb3a53b449b56cd3499627c75998ca95cf2c7cb97a940d1c4ce4d67c7f238883d612d84ab658f7555a611862a54ca32906d3dd8c3acc90f1d9c8a043a0651259c7c84a10107a14b57cc515948bc4771574ac11b84b9b5e856193668ba950ba7dba0a8b7b40d70423f805152c962859687c676a1b28cc50f87ab5b546dd02c2a80e63fa42497459cccd315c44b36cf70804dccd52e88120188205c882c0b8a77948924956539615619842b197218b7118259ba78009025199f6fe30a27856d50ac3a63f20eef27ca01406a214cc02d1c2c82b708a9c96da38b35e0719253eb4957f008c71c96acfa0baffb7235966c92142a977a77a0d560b42c1ff61586af43249108282fd71394f17ab7d0bbc3c4c14817ba86d5c0ca441625a2a7aac1c553cb9c641bc4ec69ac7a06611b4b6412da10ccb2e390609a90460d040fb75e5a8aca884472cd06fb079cb948a15f3b4342532f016d8b1d811a7cad4863cf6619fbd12e45fe6c6699a940292d340e07001d00204342532f016d8b1d811a7cad4863cf6619fbd12e45fe6c6699a940292d340e07"

var hs2 = "010006ee03034805fa95d4fce1dbc0824dbcee2d9e2bdcacc9ed17b7ecc1c47d81eca0b40a202012585270aebb39831791e47e209ee2e37fb1d96026e579f7ac032459a3708e4100209a9a130113021303c02bc02fc02cc030cca9cca8c013c014009c009d002f003501000685baba000000120000001b00030200020010000e000c02683208687474702f312e3144cd00050003026832ff01000100002b000706caca03040303fe0d00fa0000010001db002029177c0e1584c710146dd696dc74d6d121d748ec76d92e3a120e50d0141a4c0e00d0db25948e4b3bd9660b1ea359d6be7b682924d81dc457f56ac4cc20c4de939a39acbef1fcd602b26f4c1e5c397d3599d7b709d582b236f47e928185014fa1dc83ad97b332f2db763d69ff3b5553ded8319fd68c490753a70d8a9f63b82391ede534ae993b1347bd1c1722bf318cbce1343b1e6ffa2e5370a7968fafeea561f990a001c9f33a4d4582f5c59752dd9726e563dd101f7eed6923c1ff577401b829d8f4e0390076774f13b9446afcfa55f9eb9046993965825b3fd4b7e952fc3a92d03154e2d7ae083513383a56940eb7c877003304ef04ed7a7a00010011ec04c021889db205107954113d450fad161d65fa64f7e01ac5756ae31c9639776b011003ddb16257614ab291318b2b2d52777f8cf41e637061f931c16fda7146046db039594669a414068d48acb32b6caabd3624ab23c4126282b8a66e0ca593eea68dd737ba8ecc46bebb37e039bc924303910a4c6018cb87bb53289899a8e47c41c48b263920512b5b82196240d696ba0c8998a75787564923687d03645a92dcb05276c8eb782dbbe7a079315cb15442fd10bf68945326039107842d06fa5bb45975ab13c8dc6c4917162772a53e2f853658630bbee17df491c951d0091894565113239bcc496f314c0cc15bf2ab89298cb971f86cdd3cb5c20a3e7e40afb15b29ecf7b89e693232078bddc036c26424a25b5e9fe94862f49e04e6c84d467126e9a65c5bb0a629be7bc06eedb50d69dab16618468da476d114ac01d8cb96c5bc900322ff170f8a14b1da073053dc36d662391f4814ab3404cd89bca2d05b74a513146933b7704185a7596398afae316a12552204757f116a8d7727b6d28295236bb993370cb71cb39b297554f9136a79bd071c3c489859f3d9a5932783e649b0f50b24f880295ce64419c85fabbc21c2f1604cf396a9b763fa69cb24f31c2ae5b9876b990188ab53bc9934464163f8b32e440cb9774da340b68b8592803813e3f51bcb184be345b5516a2109a5b3cbb911c10508a7f2296b584f49a2c1b6d06a5e1418ad9834e1cc9dedb0a7ffb753fde35bbdb282a88c43cec2b8712b868e41a3f35985ad0475697ba9f57a2e25096d63786225b03cd92cc0df6831d2273cc7351b7a638d5f3b7340771808549eccbb0c499708c6ba338a63907c682749a28c38cb64fbac43946b946862801c777257877eda363029eb02f8eb86c9c88cdf024595da198fc599e220040492851959b91ca95a3b338c6d99655a677cfbbc4722cc978aa52373d2424e631a9f6a040e4061c022840fd6ba69d330be151a49198cb3c54823d70a2fac48cc1188a24ca8ff96afced067f3bac40dea08f879c2d2282144d56c90828f0ca8ada63aa67fe66a8c640e85383374e359b6640a6f240369775bed565174a825eb2a53bf3cab54c94b63a721303057336a9ea6d1971ed54bbefa6b0db30171d7a3a300d0cf806182f04098e1588ea0a2a0fa2c3d32b4c9ec04a3fabddffa06c363a1ea6376b2ec5303c33d93e01c661c2d1012277267330a826f8925b4eabc2d65e481feba363c1114d57c605ef67daf66553c706e42cbb7c212ca16078d1b1b88be028367b73a2877b0dfc9a9fcd29d2b311436d2a967ca1fc3f38251d632eae27a35bc777c4969b0c17a1f92686ab8982ae76f1ab763f3182b6036525fb1c33716926f191d1ef037b6b307836250c4f957db9a923f763c2e9c843e165dc3162e66b56bbf7318215a6fc76501d68993f786c6e0d67661c8c958bac7466876915c290eb716cf14589997750c377fa8f70ccff832171b4d1388bed4d131ac6967393b070ecb953124be2f2545c955ab76e61d1ae6b64331cfd377caae53265c4a1fa8d01ca8e7cddd5c4ebf759ecc856ad6951df6c450a071670a9c10c30673046b19055695bd1319ccd9211234a50879a7be6598cae7b8bef0a4f0704343d3bb6e87138939477964692042e5785fc427be7d6a376d4ba80f4f595f64ad57ea86656c15bb0286407627ff8e504346b7564621c7fd6272e5404f79001d002060c2a484b8bb2c1f47ebefa9d749d0f2fdbe2b0f2db9a4c6d14b4a6173ea15300000000e000c0000096c6f63616c686f737400050005010000000000170000000a000c000a7a7a11ec001d00170018002d0002010100230000000b00020100000d00120010040308040401050308050501080606016a6a000100"

func TestMarshalHandshake(t *testing.T) {
	data, err := hex.DecodeString(hs2)
	if err != nil {
		t.Fatal(err)
	}
	ht := HandshakeType(data[0])
	length := uint(data[1])
	length <<= 8
	length |= uint(data[2])
	length <<= 8
	length |= uint(data[3])

	if ht != HTClientHello {
		t.Fatalf("invalid handshake: got %v, expected %v", ht, HTClientHello)
	}

	if len(data) != 4+int(length) {
		t.Fatalf("invalid length: got %v, expected %v", len(data), 4+length)
	}

	var clientHello ClientHello

	in := bytes.NewReader(data)
	err = Unmarshal(in, &clientHello)
	if err != nil {
		fmt.Printf("clientHello: %v\n", clientHello)
		t.Fatal(err)
	}

	fmt.Printf("clientHello: %v\n", clientHello)

	encoded, err := Marshal(clientHello)
	if err != nil {
		t.Fatal(err)
	}
	if bytes.Compare(data, encoded) != 0 {
		limit := len(data)
		if len(encoded) < limit {
			limit = len(encoded)
		}
		for i := 0; i < limit; i++ {
			if data[i] != encoded[i] {
				t.Fatalf("encoded differs at %v:\n%x\n%x",
					i, data[i:], encoded[i:])
			}
		}
	}
}
